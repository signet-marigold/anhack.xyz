main {
	#toc-container {
		font-size: 0.9em;
		border-radius: if($rounded-corners, $base-border-radius, null);
		margin: 0 0 2rem;
		background-color: $black;
		@include xs {
			padding: 1rem 1rem 0.5rem
		}
		@include sm {
			padding: 1.35rem 2rem 0.75rem;
		}
		@include md {
			padding-left:  3rem;
			padding-right: 3rem;
		}
		h2 {
			margin: 0;
			font-size: 1.5rem * 0.9;
		}
		nav > ol,
		nav > ul {
			margin: 1rem 0 0;
			padding-left: 1rem;
		}
		// Wrapping text packs for readablility
		line-height: 1.2;
		ol,
		ul {
			li {
				margin: 0.5rem 0;
			}
		}
		
		// Side mode
		$sm-breakpoint: $page-max-width + $toc-loose-min-width * 2;
		$sm-flex-distance: $toc-loose-max-width - $toc-loose-min-width;
		nav ol,
		nav ul {
			@include breakpoint($sm-breakpoint) {
				padding-left: $indent-xs;
			}
			@if ($sm-flex-distance >= $tocs-indent-start-sm) {
				@include breakpoint($sm-breakpoint + $tocs-indent-start-sm) {
					padding-left: $indent-sm;
				}
			}
			@if ($sm-flex-distance >= $tocs-indent-start-md) {
				@include breakpoint($sm-breakpoint + $tocs-indent-start-md) {
					padding-left: $indent-md;
				}
			}
			@if ($sm-flex-distance >= $tocs-indent-start-lg) {
				@include breakpoint($sm-breakpoint + $tocs-indent-start-lg) {
					padding-left: $indent-lg;
				}
			}
		}
		$sm-horizontal-padding: 3rem;
		@include breakpoint($sm-breakpoint) {
			nav > ol,
			nav > ul {
				padding-left: 0;
			}
			padding: 1.75rem $sm-horizontal-padding 1.15rem;
			margin: 0;
			position: absolute;
			top: $body-margin + 6rem;
			
			// Begin: fix unsupported calc() browsers
			// Bind right; max-width set to minimum safe width
			right: $toc-loose-margin;
			max-width: $toc-loose-min-width - ($toc-loose-margin * 2 + $sm-horizontal-padding * 2);
			
			// Reset right if calc() is supported
			@supports (right: calc(0px)) {
				right: auto;
			}
			// End: fix unsupported calc() browsers
			
			left: calc(50% + #{$page-max-width * 0.5 + $toc-loose-margin});
			max-width: calc((100% - #{$page-max-width}) * 0.5 - #{$toc-loose-margin * 2 + $sm-horizontal-padding * 2});
		}
		
		// Side mode. Set max expand width
		@include breakpoint($page-max-width + $toc-loose-max-width * 2) {
			max-width: $toc-loose-max-width - ($toc-loose-margin * 2 + $sm-horizontal-padding * 2);
		}
	}
}