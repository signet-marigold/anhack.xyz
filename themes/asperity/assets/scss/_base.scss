body {
	// Font & text settings
	font-family: sans-serif;
	font-family: "Noto Sans", sans-serif;
	font-size: $base-font-size;
	letter-spacing: -0.01em;
	line-height: 1.5;
	overflow-wrap: anywhere;
	text-rendering: optimizeLegibility;
	-webkit-font-smoothing: antialiased;
	font-variant-ligatures: contextual;
	-webkit-overflow-scrolling: touch;
	-webkit-text-size-adjust: 100%;

	background-color: $black;
	color: $white;

	margin: $body-margin;

	// Footer alignment
	display: flex;
	flex-flow: column;
	// fallback
	height: 100vh;

	// Remove margin from footer
	margin-bottom: 0;
	// calculate out the top margin
	height: calc(100vh - #{$body-margin});

	// Background image settings
	@if $show-bg-texture {
		background-image: url(#{$bg-texture-path});
		background-size: 100%;
		background-repeat: repeat-y;
		image-rendering: pixelated;

		// Reset image rendering after background is set to pixelated
		& > * {
			image-rendering: initial;
		}
	}
	
	//@include breakpoint($page-max-width) {
	//	margin: $body-margin * 2;
	//}
}

// Content bodies
header > div,
footer > div,
nav    > div,
main   > div {
	max-width: $page-max-width;
	margin: 0 auto;
}
nav > div {
	// Remove padding from width
	max-width: $page-max-width - ($nav-horizontal-padding * 2);
}

// Indent text in the page
p,
.header-text,
#nextprev {
	@include xs {
		padding: 0 $pbm-compact;
	}
	@include breakpoint($content-max-width) {
		padding: 0 $pbm-expand;
	}
}
h1:not(:target) .text,
h2:not(:target) .text,
h3:not(:target) .text,
h4:not(:target) .text,
h5:not(:target) .text,
h6:not(:target) .text,
h1:target,
h2:target,
h3:target,
h4:target,
h5:target,
h6:target {
	display: inline-block;
	@include xs {
		margin: 0 $pbm-compact;
	}
	@include breakpoint($content-max-width) {
		margin: 0 $pbm-expand;
	}
}


// Text/element mouse selection
@mixin selection {
	background: $selection-background;
	color: $selection-color;
}
::-moz-selection {
	// ! Keep Separate !
	// When browsers find a part of a select they
	// donâ€™t understand, they drop the entire thing.
	// Combining selection styles together will cause it to fail.
	@include selection;
}
::selection {
	@include selection;
}

// Disable mouse selection on screen-reader omitted content
[aria-hidden="true"] {
	user-select: none;
}


// Basic elements
// Paragraphs
p {
	margin: 1rem 0;
}

// Heading Rows
hr {
	margin: 1rem 0;
	border: $base-border-thickness $gray-700 solid;
	&.small {
		border-right-color: $pure-black;
		border-left-color: $pure-black;
		border-bottom-color: $pure-black;
	}
}

ol,
ul {
	@include list-indent;
	li {
		margin: 0.25rem 0;
	}
}
.main-article > ol,
.main-article > ul {
	margin: 2rem 0;
}

blockquote {
	$color: $gray-400;
	// these two have to be the same but
	$quote-offset: 3em; // this one is em
	$quote-size: 3rem;  // and this one is in rem
	$quote-margin: 0.25rem;
	@mixin quote {
		color: $color;
		vertical-align: $quote-offset * -0.12;
		font-size: $quote-size;
		line-height: 0;
	}
	@include squeeze-indent;
	quotes: "\201C" "\201D" "\2018" "\2019";
	background-color: mix($color, $black, 20%);
	background-color: rgba($color, 0.2);
	font-family: "Playfair Display", serif;
	border-left: 0.1875rem solid $color;
	border-radius: if($rounded-corners, $base-border-radius, null);
	padding: 1rem;
	p {
		font-size: $base-font-size;
		margin-top: 0;
		display: inline;
	}
	.blockquote-quote {
		// hugo creates extra whitespace by having a dangling p tag in the blockquote.
		// this is the easiest way to get rid of it
		font-size: 0;

		&:before {
			content: open-quote;
			margin-right: $quote-margin;
			@include quote;
		}
		&:after {
			content: close-quote;
			margin-left: $quote-margin;
			@include quote;
		}
	}
	.blockquote-caption {
		font-size: $base-font-size;
		color: $gray-100;
		margin-top: 0.5rem;
	}
}

dl {
	dt {
	}
	dd {
		@include list-indent;
	}
}


$img-border-style: $base-border-thickness $gray-700 solid;

header .intro-header {
	.header-image,
	.header-image > img {
		border-radius: if($rounded-corners, $base-border-radius, null);
	}
	.header-image {
		border: $img-border-style;
	}
}
main {
	figure,
	.video-container {
		border: $img-border-style;
	}
}
main {
	figure,
	img,
	.video-container,
	video {
		border-radius: if($rounded-corners, $base-border-radius, null);
	}
}

img,
video {
	display: block;
	max-width: 100%;
	margin: 1rem auto;
}

.video-container {
	display: block;
	video {
		margin: 0 auto;
		min-width: 7.5rem;
		min-height: 2.625rem;
		height: auto;
	}
}

figure,
.video-container {
	@include squeeze-indent;
}

.reference {
	@include squeeze-indent;
}
.reference-body {
	display: block;
	border-radius: if($rounded-corners, $base-border-radius, null);
	text-align: center;
	background-color: #19191d;
	font-family: "Noto Serif", serif;
	padding: 1rem 2.5rem;
	line-height: 1.15rem;
	border: $base-border-thickness solid transparent;
	&:hover {
		border-color: $fuchsia;
	}
	color: $white !important;
	&:where(.external-link) {
		position: relative;
		&::after {
			content: "";
			background-repeat: no-repeat;
			background-position: 50%;
			display: inline-block;
			position: absolute;
			width: .9rem;
			height: 1rem;
			background-image: url(/icons/external-link-white.svg);
			margin: 0.6rem 0.7rem;
			right: 0;
			top: 0;
		}
	}
}
.reference-cite {
	margin-top: 0.415rem;
	color: $gray-200;
	font-size: 90%;
}


// Background 'dot' pattern
@if $show-bg-halftone {
	#halftone-plate {
		display: block;
		position: fixed;
		width: 100%;
		height: 100%;
		top: 0;
		left: 0;
		z-index: -99;
	}
}
